<project name="zf2-demo" default="help" basedir=".">
    <import file="./vendor/continuousphp/aws-sdk-phing/tasks.xml" />


    <if>
        <available file="${project.basedir}/build.local.properties" />
        <then>
            <property file="${project.basedir}/build.local.properties" />
        </then>
    </if>
    <property file="${project.basedir}/build.properties" />

    <if>
        <isset property="continuousphp.pr" />
        <then>
            <echo message="Switching to PR stack" />
            <property name="cf.filteredStackName"
                      value="${cf.stackName}-${continuousphp.pr}" />
        </then>
        <else>
            <property name="cf.filteredStackName"
                      value="${cf.stackName}" />
        </else>
    </if>

    <target name="help" description="List available targets">
        <exec executable="vendor/bin/phing"
              passthru="true">
            <arg value="-l"/>
        </exec>
    </target>

    <target name="setup-aws">
        <aws-config region="${aws.region}" profile="${aws.profile}" />
    </target>

    <target name="run-stack">
        <aws-cf-runstack
                name="demo-${cf.filteredStackName}"
                updateOnConflict="true"
                capabilities="CAPABILITY_IAM"
                templatePath="./infra/single-server.template">
            <param name="KeyName" value="${cf.KeyName}" />
            <param name="env" value="${cf.filteredStackName}" />
        </aws-cf-runstack>
    </target>

    <target name="setup-deployment-group">
        <aws-deploy-deployment-group
                name="${cf.filteredStackName}"
                updateOnConflict="true"
                deploymentConfigName="CodeDeployDefault.OneAtATime"
                serviceRole="${deploy.serviceRole}"
                application="${deploy.applicationName}">
            <ec2TagFilter key="env" value="${cf.filteredStackName}" />
        </aws-deploy-deployment-group>
    </target>

    <!-- create database -->
    <target name="init-db" description="Create Database and Grants">
        <mkdir dir="${project.basedir}/data/db"/>
        <echo file="${project.basedir}/data/db/create.sql">
            CREATE DATABASE IF NOT EXISTS ${db.dbname};
        </echo>
        <pdosqlexec url="mysql:host=${db.host}" userid="${db.username}" password="${db.password}">
            <transaction src="${project.basedir}/data/db/create.sql"/>
        </pdosqlexec>
        <delete dir="${project.basedir}/data/db" quiet="true"/>
    </target>

    <!-- Migrate Database -->
    <target name="migrate-db" description="Update the database version">
        <exec command="${doctrine.bin} migrations:migrate --no-interaction" passthru="true"/>
        <exec command="${doctrine.bin} orm:clear-cache:metadata" passthru="true"/>
        <exec command="${doctrine.bin} orm:clear-cache:query" passthru="true"/>
    </target>

    <!-- generate config -->
    <target name="generate-config">

        <!-- ORM -->
        <loadfile property="db.config" file="${project.basedir}/config/autoload/orm.local.php.dist">
            <filterchain>
                <replacetokens>
                    <token key="host" value="${db.host}"/>
                    <token key="port" value="${db.port}"/>
                    <token key="username" value="${db.username}"/>
                    <token key="password" value="${db.password}"/>
                    <token key="dbname" value="${db.dbname}"/>
                </replacetokens>
            </filterchain>
        </loadfile>
        <echo msg="${db.config}" file="./config/autoload/orm.local.php"/>

    </target>

    <target name="provision-stack"
            description="Provision a stack on AWS"
            depends="setup-aws, run-stack, setup-deployment-group" />

    <target name="setup"
            description="Setup external dependencies and migrate data"
            depends="generate-config, init-db, migrate-db"/>
</project>